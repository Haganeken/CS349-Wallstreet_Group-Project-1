/*
 * socket class 
 */
 
var io = require('socket.io-client');
var common = require('./common');
var cst = require('./constant');
var ProgressBar = require('progress');

var Socket = function(server){
  if(!server){
    throw new Error('Must init with a server');
  }

  this.server = server;
  this._repositoryFlag = false;
  this._barFlag = false;
  this._gitMessage = '';
  this._bar = null;
  this._barTerminalFlag = false;

  var options = {
    reconnection : false
  }
  this._socket = io('http://' + this.server,options);
  this.init();
}

Socket.prototype.init = function(){
  //
  var that = this;
  this._socket.on('connect',function(){
    common.printOut(cst.PREFIX_MSG_SUCCESS + 'Connect to server successfully.');
  });
  this._socket.on('connect_error',function(){
    common.printError(cst.PREFIX_MSG_ERR + 'Socket connection failed.');
  })

  this._socket.on('gitstart',function(){

    common.printOut(cst.PREFIX_MSG + 'Git update repository starting.');

    var total = 300;
    var bar = new ProgressBar('    downloading [:bar] :percent :etas', { total: total , width : 40});
    //
    that._bar = bar;
    var count = 0;

    // 先打印bar
    process.nextTick(function(){
      bar.tick();
    })
    var timer = setInterval(function () {
      // 中断
      if(that._barTerminalFlag) {
      clearInterval(timer);
      return;
      }

      bar.tick();
      count ++;
      if(that._repositoryFlag){
       bar.tick(total - count);
      }
      if (bar.complete) {
      console.log('\n    complete\n');
      clearInterval(timer);
      if(that._repositoryFlag){
        common.printOut(that._gitMessage);
        that._socket.emit('gitdone');
      }else{
        that._barFlag = true;
      }
      }
    }, 100);
  });

  this._socket.on('gitupdate',function(msg){
    that._repositoryFlag = true;
    that._gitMessage = msg;
    if(that._barFlag){
      common.printOut(msg);
      // fix time > 30s _socket null bug
      that._socket.emit('gitdone');
    }
  });

  //
  this._socket.on('plain_log',function(msg){
    common.printOut(msg);
  })

  this._socket.on('msg',function(msg){
    common.printOut(cst.PREFIX_MSG + msg);
  });

  this._socket.on('wrong',function(msg){
    // 判断进度条
    if(that._bar && !(that._bar.complete)){
      that._bar.terminate();
      that._barTerminalFlag = true;
    }
    common.printError(cst.PREFIX_MSG_ERR + msg);
  });

  this._socket.on('success',function(msg){
    common.printOut(cst.PREFIX_MSG_SUCCESS + msg);
  });
};

Socket.prototype.getfd = function(){
  return this._socket;
}

module.exports = Socket;

